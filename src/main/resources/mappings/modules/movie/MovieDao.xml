<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.movieclub.movie.dao.MovieDao">
    
	<sql id="movieColumns">
		a.id AS "id",
		a.title AS "title",
		m.id AS "genre",
		m.genre_name AS "genreName",
		a.type AS "type",
		a.category AS "category",
		a.price AS "price",
		a.hangout_price AS "hangoutPrice",
		a.image AS "image",
		a.video_stream AS "videoStream",
		a.video_stream_hls_dir AS "videoStreamHlsDir",
		a.year_release AS "yearRelease",
		a.restriction AS "restriction",
		a.age_requirement AS "ageRequirement",
		a.video_time AS "videoTime",
		a.studio AS "studio",
		a.legal AS "legal",
		a.plot AS "plot",
		a.starring AS "starring",
		a.director AS "director",
		a.screenwriter AS "screenwriter",
		a.producer AS "producer",
		a.original_sound_track AS "originalSoundTrack",
		a.cast_and_crew AS "castAndCrew",
		a.page_view_count AS "pageViewCount",
		a.video_watch_count AS "videoWatchCount",
		a.five_stars_count AS "fiveStarsCount",
		a.four_stars_count AS "fourStarsCount",
		a.three_stars_count AS "threeStarsCount",
		a.two_stars_count AS "twoStarsCount",
		a.one_stars_count AS "oneStarsCount",
		a.sort_order AS "sortOrder",
		a.status AS "status",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="movieJoins">
        LEFT JOIN movie_genre m ON a.genre = m.id
	</sql>
    
	<select id="get" resultType="Movie">
		SELECT 
			<include refid="movieColumns"/>
		FROM movie a
		<include refid="movieJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Movie">
		SELECT 
			<include refid="movieColumns"/>
		FROM movie a
		<include refid="movieJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="title != null and title != ''">
				AND a.title LIKE 
					<if test="dbName == 'oracle'">'%'||#{title}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{title}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{title},'%')</if>
			</if>
			<if test="genre != null and genre != ''">
				AND a.genre = #{genre}
			</if>
			<if test="director != null and director != ''">
				AND a.director LIKE
				<if test="dbName == 'oracle'">'%'||#{director}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{director}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{director},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Movie">
		SELECT 
			<include refid="movieColumns"/>
		FROM movie a
		<include refid="movieJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="getMovieListWithoutRecommendation" resultType="Movie">
		SELECT
		<include refid="movieColumns"/>
		FROM movie a
		<include refid="movieJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.id NOT IN (select movie_id from recommendation r where r.del_flag = #{DEL_FLAG_NORMAL})
			<if test="title != null and title != ''">
				AND a.title LIKE
				<if test="dbName == 'oracle'">'%'||#{title}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{title}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{title},'%')</if>
			</if>
			<if test="genre != null and genre != ''">
				AND a.genre = #{genre}
			</if>
			<if test="director != null and director != ''">
				AND a.director LIKE
				<if test="dbName == 'oracle'">'%'||#{director}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{director}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{director},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>






	<insert id="insert">
		INSERT INTO movie(
			id,
			title,
			genre,
			type,
			category,
			price,
			hangout_price,
			image,
			video_stream,
			video_stream_hls_dir,
			year_release,
			restriction,
			age_requirement,
			video_time,
			studio,
			legal,
			plot,
			starring,
			director,
			screenwriter,
			producer,
			original_sound_track,
			cast_and_crew,
			page_view_count,
			video_watch_count,
			five_stars_count,
			four_stars_count,
			three_stars_count,
			two_stars_count,
			one_stars_count,
			sort_order,
			status,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{title},
			#{genre},
			#{type},
			#{category},
			#{price},
			#{hangoutPrice},
			#{image},
			#{videoStream},
			#{videoStreamHlsDir},
			#{yearRelease},
			#{restriction},
			#{ageRequirement},
			#{videoTime},
			#{studio},
			#{legal},
			#{plot},
			#{starring},
			#{director},
			#{screenwriter},
			#{producer},
			#{originalSoundTrack},
			#{castAndCrew},
			#{pageViewCount},
			#{videoWatchCount},
			#{fiveStarsCount},
			#{fourStarsCount},
			#{threeStarsCount},
			#{twoStarsCount},
			#{oneStarsCount},
			#{sortOrder},
			#{status},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE movie SET 	
			title = #{title},
			genre = #{genre},
			type = #{type},
			category = #{category},
			price = #{price},
			hangout_price = #{hangoutPrice},
			image = #{image},
			video_stream = #{videoStream},
			video_stream_hls_dir = #{videoStreamHlsDir},
			year_release = #{yearRelease},
			restriction = #{restriction},
			age_requirement = #{ageRequirement},
			video_time = #{videoTime},
			studio = #{studio},
			legal = #{legal},
			plot = #{plot},
			starring = #{starring},
			director = #{director},
			screenwriter = #{screenwriter},
			producer = #{producer},
			original_sound_track = #{originalSoundTrack},
			cast_and_crew = #{castAndCrew},
			page_view_count = #{pageViewCount},
			video_watch_count = #{videoWatchCount},
			five_stars_count = #{fiveStarsCount},
			four_stars_count = #{fourStarsCount},
			three_stars_count = #{threeStarsCount},
			two_stars_count = #{twoStarsCount},
			one_stars_count = #{oneStarsCount},
			sort_order = #{sortOrder},
			status = #{status},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE movie SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>